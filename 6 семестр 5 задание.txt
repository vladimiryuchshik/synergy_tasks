java import
java.io
.*
; import java.util.ArrayList; import java.util.List; import java.util.Scanner; class Task { private String description; private boolean isCompleted; public Task(String description) { this.description = description; this.isCompleted = false; } public String getDescription() { return description; } public boolean isCompleted() { return isCompleted; } public void setCompleted(boolean completed) { isCompleted = completed; } } class TaskList { private List tasks; public TaskList() { tasks = new ArrayList<>(); } public void addTask(Task task) { tasks.add(task); } public void removeTask(int index) { tasks.remove(index); } public void displayTasks() { int count = 1; for (Task task : tasks) { System.out.println(count + ". " + task.getDescription() + " - " + (task.isCompleted() ? "Completed" : "Incomplete")); count++; } } public void markTaskCompleted(int index) { Task task = tasks.get(index); task.setCompleted(true); } public void displayCompletedTasks() { System.out.println("Completed Tasks:"); int count = 1; for (Task task : tasks) { if (task.isCompleted()) { System.out.println(count + ". " + task.getDescription()); count++; } } } public void saveTasksToFile(String fileName) { try (PrintWriter writer = new PrintWriter(fileName)) { for (Task task : tasks) { writer.println(task.getDescription() + "," + task.isCompleted()); } System.out.println("Tasks saved to file: " + fileName); } catch (FileNotFoundException e) { System.err.println("Error saving tasks to file: " + e.getMessage()); } } public void loadTasksFromFile(String fileName) { tasks.clear(); try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) { String line; while ((line = reader.readLine()) != null) { String[] parts = line.split(","); Task task = new Task(parts[0].trim()); task.setCompleted(Boolean.parseBoolean(parts[1].trim())); tasks.add(task); } System.out.println("Tasks loaded from file: " + fileName); } catch (IOException e) { System.err.println("Error loading tasks from file: " + e.getMessage()); } } } public class TaskManager { public static void main(String[] args) { TaskList taskList = new TaskList(); Scanner scanner = new Scanner(
System.in
); boolean running = true; while (running) { System.out.println("\n1. Add Task"); System.out.println("2. Remove Task"); System.out.println("3. Display Tasks"); System.out.println("4. Mark Task as Completed"); System.out.println("5. Display Completed Tasks"); System.out.println("6. Save Tasks to File"); System.out.println("7. Load Tasks from File"); System.out.println("8. Exit"); System.out.print("Choose an option: "); int option = scanner.nextInt(); scanner.nextLine(); // Consume newline character switch (option) { case 1: System.out.print("Enter task description: "); String description = scanner.nextLine(); Task newTask = new Task(description); taskList.addTask(newTask); break; case 2: System.out.print("Enter task number to remove: "); int index = scanner.nextInt(); taskList.removeTask(index - 1); break; case 3: taskList.displayTasks(); break; case 4: System.out.print("Enter task number to mark as completed: "); int taskIndex = scanner.nextInt(); taskList.markTaskCompleted(taskIndex - 1); break; case 5: taskList.displayCompletedTasks(); break; case 6: taskList.saveTasksToFile("tasks.txt"); break; case 7: taskList.loadTasksFromFile("tasks.txt"); break; case 8: running = false; break; default: System.out.println("Invalid option. Please try again."); } } System.out.println("Task Manager closed."); } } 
Этот пример включает классы 
Task
для представления задачи и 
TaskList
